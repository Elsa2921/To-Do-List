{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NUC\\\\FullStackProjects\\\\to_do_list\\\\src\\\\componets\\\\PendingTasksMain.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PendingTasksMain(props) {\n  _s();\n  const [name, setName] = useState('');\n  const [projects, setProjects] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [doneTasks, setDoneTasks] = useState([]);\n  const [deadline, setDeadline] = useState('');\n  useEffect(() => {\n    handleReload();\n  }, []);\n  const handleReload = async () => {\n    try {\n      const res = await axios.get('http://localhost/toDoList_backend/', {\n        'params': {\n          'pendingTaskReload': true\n        },\n        withCredentials: true\n      });\n      const data = res.data;\n      if (data.projects) {\n        setProjects(data.projects);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleSelectProject = e => {\n    const option = e.target.selectedOptions[0];\n    const id = option.getAttribute('data-id');\n    const name = option.getAttribute('data-name');\n    setName(name);\n    getTasks(id);\n  };\n  const getTasks = async id => {\n    try {\n      const res = await axios.get('http://localhost/toDoList_backend/', {\n        'params': {\n          'getMyTasksId': id\n        },\n        withCredentials: true\n      });\n      const data = res.data;\n      if (data.tasks) {\n        setTasks(data.tasks);\n      }\n      if (data.done_tasks) {\n        setDoneTasks(data.done_tasks);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid pb-5 team_cont\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container d-flex justify-content-start align-items-start flex-column gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-start gap-3 flex-column\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"select_team\",\n          onInput: handleSelectProject,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            disabled: true,\n            children: \"Select a project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), projects.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            \"data-id\": item.id,\n            \"data-name\": item.p_name,\n            children: item.p_name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"w-100 text-center pt-4\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-5 container d-flex justify-content-between align-items-start flex-wrap gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"team_box p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task_div\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              \"data-key\": task['id']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              \"data-key\": task['id'],\n              className: \"text_task\",\n              children: task['name']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)\n        }, task['id'], false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"team_box p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Done Tasks  \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(PendingTasksMain, \"x1V7JjJzB+FiY0mjUi+JEkp37l4=\");\n_c = PendingTasksMain;\nexport default PendingTasksMain;\nvar _c;\n$RefreshReg$(_c, \"PendingTasksMain\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","PendingTasksMain","props","_s","name","setName","projects","setProjects","tasks","setTasks","doneTasks","setDoneTasks","deadline","setDeadline","handleReload","res","get","withCredentials","data","error","console","handleSelectProject","e","option","target","selectedOptions","id","getAttribute","getTasks","done_tasks","className","children","onInput","selected","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","item","p_name","task","type","_c","$RefreshReg$"],"sources":["C:/Users/NUC/FullStackProjects/to_do_list/src/componets/PendingTasksMain.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction PendingTasksMain(props) {\r\n    const [name,setName] = useState('');\r\n    const [projects,setProjects] = useState([])\r\n    const [tasks,setTasks] = useState([]);\r\n    const [doneTasks,setDoneTasks] = useState([])\r\n    const [deadline,setDeadline] = useState('');\r\n    useEffect(()=>{\r\n        handleReload();\r\n    },[])\r\n\r\n    const handleReload = async()=>{\r\n        try{\r\n            const res = await axios.get('http://localhost/toDoList_backend/',{\r\n                'params':{\r\n                    'pendingTaskReload':true\r\n                },\r\n                withCredentials:true\r\n            })\r\n            const data = res.data\r\n            if(data.projects){\r\n                setProjects(data.projects)\r\n            }\r\n        }\r\n        catch(error){\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n\r\n    const handleSelectProject = (e)=>{\r\n        const  option= e.target.selectedOptions[0]\r\n        const id = option.getAttribute('data-id');\r\n        const name = option.getAttribute('data-name');\r\n        setName(name);\r\n        getTasks(id);\r\n    }\r\n\r\n    const getTasks= async(id)=>{\r\n        try{\r\n            const res = await axios.get('http://localhost/toDoList_backend/',{\r\n                'params':{\r\n                    'getMyTasksId':id\r\n                },\r\n                withCredentials:true\r\n            })\r\n            const data=  res.data\r\n            if(data.tasks){\r\n                setTasks(data.tasks)\r\n            }\r\n            if(data.done_tasks){\r\n                setDoneTasks(data.done_tasks);\r\n            }\r\n        }\r\n        catch(error){\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container-fluid pb-5 team_cont'>\r\n            <div className='container d-flex justify-content-start align-items-start flex-column gap-4'>\r\n                <div className='d-flex justify-content-between align-items-start gap-3 flex-column'>\r\n           \r\n                    <select id='select_team' onInput={handleSelectProject}>\r\n                        <option selected disabled>Select a project</option>\r\n                        {projects.map(item=>(\r\n                            <option key={item.id} data-id={item.id} data-name={item.p_name}>{item.p_name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <h2 className='w-100 text-center pt-4'>{name}</h2>\r\n            </div>\r\n            <div className='pt-5 container d-flex justify-content-between align-items-start flex-wrap gap-4'>\r\n                <div className='team_box p-4'>\r\n                    <h3>Tasks</h3>\r\n                    {tasks.map((task)=>(\r\n                        <li key={task['id']}>\r\n                            <div className='task_div'>\r\n                                <input type='checkbox' data-key={task['id']} />\r\n                                <h3 data-key={task['id']} className='text_task'>{task['name']}</h3>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </div>\r\n                <div className='team_box p-4'>\r\n                    <h3>Done Tasks  <i className='fa fa-check'></i></h3>\r\n                   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PendingTasksMain;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}